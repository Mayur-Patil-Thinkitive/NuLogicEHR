// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NuLogicEHR.Configurations;

#nullable disable

namespace NuLogicEHR.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NuLogicEHR.Models.EmergencyContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("RelationshipWithPatient")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("EmergencyContacts", "public");
                });

            modelBuilder.Entity("NuLogicEHR.Models.InsuranceInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EffectiveEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EffectiveStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GroupId")
                        .HasColumnType("text");

                    b.Property<string>("GroupName")
                        .HasColumnType("text");

                    b.Property<string>("InsuranceCard")
                        .HasColumnType("text");

                    b.Property<string>("InsuranceCard1")
                        .HasColumnType("text");

                    b.Property<string>("InsuranceName")
                        .HasColumnType("text");

                    b.Property<string>("InsuranceType")
                        .HasColumnType("text");

                    b.Property<string>("MemberId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer");

                    b.Property<string>("PatientRelationshipWithInsured")
                        .HasColumnType("text");

                    b.Property<bool?>("PaymentMethod")
                        .HasColumnType("boolean");

                    b.Property<string>("PlanName")
                        .HasColumnType("text");

                    b.Property<string>("PlanType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PatientId")
                        .IsUnique();

                    b.ToTable("InsuranceInformation", "public");
                });

            modelBuilder.Entity("NuLogicEHR.Models.OtherInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("ConsentToEmail")
                        .HasColumnType("boolean");

                    b.Property<bool?>("ConsentToMessage")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ModifiedBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer");

                    b.Property<string>("PracticeLocation")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("SoberLivingHome")
                        .HasColumnType("integer");

                    b.Property<int?>("Source")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PatientId")
                        .IsUnique();

                    b.ToTable("OtherInformation", "public");
                });

            modelBuilder.Entity("NuLogicEHR.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Patients", "public");
                });

            modelBuilder.Entity("NuLogicEHR.Models.PatientContactInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("EmailNote")
                        .HasColumnType("text");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("text");

                    b.Property<string>("HomeNumber")
                        .HasColumnType("text");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PatientId")
                        .IsUnique();

                    b.ToTable("PatientContactInformation", "public");
                });

            modelBuilder.Entity("NuLogicEHR.Models.PatientDemographic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CurrentGender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Ethnicity")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GenderAtBirth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nickname")
                        .HasColumnType("text");

                    b.Property<string>("Occupation")
                        .HasColumnType("text");

                    b.Property<string>("PreferredLanguage")
                        .HasColumnType("text");

                    b.Property<string>("ProfileImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Pronouns")
                        .HasColumnType("text");

                    b.Property<string>("Race")
                        .HasColumnType("text");

                    b.Property<int?>("SSN")
                        .HasColumnType("integer");

                    b.Property<string>("SSNNote")
                        .HasColumnType("text");

                    b.Property<string>("Suffix")
                        .HasColumnType("text");

                    b.Property<string>("TimeZone")
                        .HasColumnType("text");

                    b.Property<string>("TreatmentType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PatientDemographics", "public");
                });

            modelBuilder.Entity("NuLogicEHR.Models.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DEANumber")
                        .HasColumnType("text");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GroupNPINumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InsuranceAccepted")
                        .HasColumnType("text");

                    b.Property<bool?>("KioskAccess")
                        .HasColumnType("boolean");

                    b.Property<int?>("KioskPin")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LicensedState")
                        .HasColumnType("integer");

                    b.Property<bool?>("MapRenderingProvider")
                        .HasColumnType("boolean");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NPINumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OfficeFaxNumber")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("text");

                    b.Property<int>("ProviderType")
                        .HasColumnType("integer");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("Signature")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TaxonomyNumber")
                        .HasColumnType("text");

                    b.Property<int>("WorkLocation")
                        .HasColumnType("integer");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Providers", "public");
                });

            modelBuilder.Entity("NuLogicEHR.Models.SchedulingAppointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AppointmentMode")
                        .HasColumnType("boolean");

                    b.Property<int>("AppointmentType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Location")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer");

                    b.Property<string>("SelectedForms")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TimeSlot")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("TransportationService")
                        .HasColumnType("boolean");

                    b.Property<int>("TreatmentType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("SchedulingAppointments", "public");
                });

            modelBuilder.Entity("NuLogicEHR.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .HasColumnType("text");

                    b.Property<string>("BankRoutingNumber")
                        .HasColumnType("text");

                    b.Property<string>("BillerId")
                        .HasColumnType("text");

                    b.Property<string>("BillingLicenseNumber")
                        .HasColumnType("text");

                    b.Property<string>("CAQHProviderId")
                        .HasColumnType("text");

                    b.Property<string>("ClearinghouseId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ERAEFTStatus")
                        .HasColumnType("text");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IssuingState")
                        .HasColumnType("text");

                    b.Property<bool>("KioskAccess")
                        .HasColumnType("boolean");

                    b.Property<int?>("KioskPin")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MailingAddressLine1")
                        .HasColumnType("text");

                    b.Property<string>("MailingAddressLine2")
                        .HasColumnType("text");

                    b.Property<string>("MedicareProviderDoc")
                        .HasColumnType("text");

                    b.Property<int?>("MedicareProviderNumber")
                        .HasColumnType("integer");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NationalProviderId")
                        .HasColumnType("text");

                    b.Property<string>("PayerAssignedId")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("Signature")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TaxIdNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Staff", "public");
                });

            modelBuilder.Entity("NuLogicEHR.Models.StaffCredential", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CredentialNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CredentialType")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ModifiedBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StaffId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffCredentials", "public");
                });

            modelBuilder.Entity("NuLogicEHR.Models.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HospitalName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SchemaName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HospitalName")
                        .IsUnique();

                    b.ToTable("Tenants", "public");
                });

            modelBuilder.Entity("NuLogicEHR.Models.EmergencyContact", b =>
                {
                    b.HasOne("NuLogicEHR.Models.PatientDemographic", "PatientDemographic")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientDemographic");
                });

            modelBuilder.Entity("NuLogicEHR.Models.InsuranceInformation", b =>
                {
                    b.HasOne("NuLogicEHR.Models.PatientDemographic", "PatientDemographic")
                        .WithOne()
                        .HasForeignKey("NuLogicEHR.Models.InsuranceInformation", "PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientDemographic");
                });

            modelBuilder.Entity("NuLogicEHR.Models.OtherInformation", b =>
                {
                    b.HasOne("NuLogicEHR.Models.PatientDemographic", "PatientDemographic")
                        .WithOne()
                        .HasForeignKey("NuLogicEHR.Models.OtherInformation", "PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientDemographic");
                });

            modelBuilder.Entity("NuLogicEHR.Models.PatientContactInformation", b =>
                {
                    b.HasOne("NuLogicEHR.Models.PatientDemographic", "PatientDemographic")
                        .WithOne()
                        .HasForeignKey("NuLogicEHR.Models.PatientContactInformation", "PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientDemographic");
                });

            modelBuilder.Entity("NuLogicEHR.Models.SchedulingAppointment", b =>
                {
                    b.HasOne("NuLogicEHR.Models.PatientDemographic", "PatientDemographic")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientDemographic");
                });

            modelBuilder.Entity("NuLogicEHR.Models.StaffCredential", b =>
                {
                    b.HasOne("NuLogicEHR.Models.Staff", "Staff")
                        .WithMany("Credentials")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("NuLogicEHR.Models.Staff", b =>
                {
                    b.Navigation("Credentials");
                });
#pragma warning restore 612, 618
        }
    }
}
